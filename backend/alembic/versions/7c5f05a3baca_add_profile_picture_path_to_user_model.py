"""Add profile picture path to user model

Revision ID: 7c5f05a3baca
Revises: 3f99c73405b3
Create Date: 2025-08-06 10:06:24.876258

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '7c5f05a3baca'
down_revision: Union[str, None] = '3f99c73405b3'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('drawings_project_id_fkey', 'drawings', type_='foreignkey')
    op.drop_constraint('drawings_uploader_id_fkey', 'drawings', type_='foreignkey')
    op.create_foreign_key(None, 'drawings', 'users', ['uploader_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'drawings', 'projects', ['project_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint('project_members_user_id_fkey', 'project_members', type_='foreignkey')
    op.drop_constraint('project_members_project_id_fkey', 'project_members', type_='foreignkey')
    op.create_foreign_key(None, 'project_members', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'project_members', 'projects', ['project_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint('projects_project_manager_id_fkey', 'projects', type_='foreignkey')
    op.create_foreign_key(None, 'projects', 'users', ['project_manager_id'], ['id'], ondelete='SET NULL')
    op.drop_constraint('task_comments_task_id_fkey', 'task_comments', type_='foreignkey')
    op.drop_constraint('task_comments_author_id_fkey', 'task_comments', type_='foreignkey')
    op.create_foreign_key(None, 'task_comments', 'users', ['author_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'task_comments', 'tasks', ['task_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint('task_photos_uploader_id_fkey', 'task_photos', type_='foreignkey')
    op.drop_constraint('task_photos_task_id_fkey', 'task_photos', type_='foreignkey')
    op.create_foreign_key(None, 'task_photos', 'users', ['uploader_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'task_photos', 'tasks', ['task_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint('tasks_project_id_fkey', 'tasks', type_='foreignkey')
    op.drop_constraint('tasks_assignee_id_fkey', 'tasks', type_='foreignkey')
    op.create_foreign_key(None, 'tasks', 'users', ['assignee_id'], ['id'], ondelete='SET NULL')
    op.create_foreign_key(None, 'tasks', 'projects', ['project_id'], ['id'], ondelete='CASCADE')

    # --- MODIFIED LINE ---
    # Add the column with a server_default of 'true' to handle existing rows.
    op.add_column('tenants', sa.Column('is_active', sa.Boolean(), nullable=False, server_default='true'))
    
    op.alter_column('tenants', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('tenants', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False)
    op.drop_index('ix_tenants_id', table_name='tenants')
    op.add_column('users', sa.Column('profile_picture_path', sa.String(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('users', 'profile_picture_path')
    op.create_index('ix_tenants_id', 'tenants', ['id'], unique=False)
    op.alter_column('tenants', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True)
    op.alter_column('tenants', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.drop_column('tenants', 'is_active')
    op.drop_constraint(None, 'tasks', type_='foreignkey')
    op.drop_constraint(None, 'tasks', type_='foreignkey')
    op.create_foreign_key('tasks_assignee_id_fkey', 'tasks', 'users', ['assignee_id'], ['id'])
    op.create_foreign_key('tasks_project_id_fkey', 'tasks', 'projects', ['project_id'], ['id'])
    op.drop_constraint(None, 'task_photos', type_='foreignkey')
    op.drop_constraint(None, 'task_photos', type_='foreignkey')
    op.create_foreign_key('task_photos_task_id_fkey', 'task_photos', 'tasks', ['task_id'], ['id'])
    op.create_foreign_key('task_photos_uploader_id_fkey', 'task_photos', 'users', ['uploader_id'], ['id'])
    op.drop_constraint(None, 'task_comments', type_='foreignkey')
    op.drop_constraint(None, 'task_comments', type_='foreignkey')
    op.create_foreign_key('task_comments_author_id_fkey', 'task_comments', 'users', ['author_id'], ['id'])
    op.create_foreign_key('task_comments_task_id_fkey', 'task_comments', 'tasks', ['task_id'], ['id'])
    op.drop_constraint(None, 'projects', type_='foreignkey')
    op.create_foreign_key('projects_project_manager_id_fkey', 'projects', 'users', ['project_manager_id'], ['id'])
    op.drop_constraint(None, 'project_members', type_='foreignkey')
    op.drop_constraint(None, 'project_members', type_='foreignkey')
    op.create_foreign_key('project_members_project_id_fkey', 'project_members', 'projects', ['project_id'], ['id'])
    op.create_foreign_key('project_members_user_id_fkey', 'project_members', 'users', ['user_id'], ['id'])
    op.drop_constraint(None, 'drawings', type_='foreignkey')
    op.drop_constraint(None, 'drawings', type_='foreignkey')
    op.create_foreign_key('drawings_uploader_id_fkey', 'drawings', 'users', ['uploader_id'], ['id'])
    op.create_foreign_key('drawings_project_id_fkey', 'drawings', 'projects', ['project_id'], ['id'])
    # ### end Alembic commands ###